[1mdiff --git a/backend/pong/consumers/Tournament.py b/backend/pong/consumers/Tournament.py[m
[1mindex ff34ea9..df2d3b1 100644[m
[1m--- a/backend/pong/consumers/Tournament.py[m
[1m+++ b/backend/pong/consumers/Tournament.py[m
[36m@@ -227,11 +227,19 @@[m [mclass TournamentConsumer(AsyncWebsocketConsumer):[m
 		for tour_game in games:[m
 			user1 = tour_game.game_id.user1_id[m
 			user2 = tour_game.game_id.user2_id[m
[32m+[m			[32mtour_user1 = TournamentsUsers.objects.get([m
[32m+[m				[32mtournament_id=self.tournament_id, user_id=user1.id)[m
[32m+[m			[32mtour_user2 = TournamentsUsers.objects.get([m
[32m+[m				[32mtournament_id=self.tournament_id, user_id=user2.id)[m
[32m+[m
 			game_data = TournamentsGamesSerializer(tour_game).data[m
 			game_data['game_id'] = GamesSerializer(tour_game.game_id).data[m
 			game_data['user1_id'] = UsersSerializer(user1).data[m
 			game_data['user2_id'] = UsersSerializer(user2).data[m
[32m+[m			[32mgame_data['tour_user1_id'] = TournamentsUsersSerializer(tour_user1).data[m
[32m+[m			[32mgame_data['tour_user2_id'] = TournamentsUsersSerializer(tour_user2).data[m
 			game_data['phase'] = phase.lower()[m
[32m+[m
 			games_data.append(game_data)[m
 [m
 		return games_data[m
[1mdiff --git a/backend/pong/templates/pages/gametournament.html b/backend/pong/templates/pages/gametournament.html[m
[1mindex 139ab77..8ed5aae 100644[m
[1m--- a/backend/pong/templates/pages/gametournament.html[m
[1m+++ b/backend/pong/templates/pages/gametournament.html[m
[36m@@ -30,7 +30,7 @@[m
 	import { CONNECTION_TIMEOUT } from '/static/js/game/macros.js';[m
 [m
 	const { [m
[31m-		user1_id: p1 , user2_id: p2, [m
[32m+[m		[32muser1_id: p1 , user2_id: p2,[m
 		game_id: gameInstance, tournament_id: tourID [m
 	} = myUser.tournamentGameData;[m
 [m
[36m@@ -46,8 +46,8 @@[m
 			connectionTimedOut = false;[m
 			let app = new Application();[m
 			app.init({ [m
[31m-				player1Data: {'id': p1.id, 'username': p1.username},[m
[31m-				player2Data: {'id': p2.id, 'username': p2.username},[m
[32m+[m				[32mplayer1Data: {'id': p1.id, 'username': p1.username, 'picture': p1.picture},[m
[32m+[m				[32mplayer2Data: {'id': p2.id, 'username': p2.username, 'picture': p2.picture},[m
 				gameSocket: myUser.gameSocket,[m
 				tournamentSocket: myUser.tournamentSocket,[m
 				gameType: "Tournament",[m
[1mdiff --git a/backend/static/css/globals.css b/backend/static/css/globals.css[m
[1mindex 9ee254c..bb30f67 100644[m
[1m--- a/backend/static/css/globals.css[m
[1m+++ b/backend/static/css/globals.css[m
[36m@@ -10,4 +10,4 @@[m [mdiv.main {[m
 	100% {[m
 		opacity: 1;[m
 	}[m
[31m-}[m
\ No newline at end of file[m
[32m+[m[32m}[m[41m                            [m
\ No newline at end of file[m
[1mdiff --git a/backend/static/css/home_view.css b/backend/static/css/home_view.css[m
[1mindex 1945995..5d5e96d 100755[m
[1m--- a/backend/static/css/home_view.css[m
[1m+++ b/backend/static/css/home_view.css[m
[36m@@ -25,10 +25,11 @@[m
 [m
 .options p {[m
     color: #FFFFFF;[m
[31m-    font-size: x-small;[m
[32m+[m[32m    font-size: 12px;[m
     font-weight: normal;[m
     text-align: center;[m
     padding-left: 20px;[m
     padding-right: 20px;[m
[32m+[m	[32mmargin-top: 4px;[m
 	width: 25vw;[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/backend/static/js/globals.js b/backend/static/js/globals.js[m
[1mindex cb14dfe..e70ed1a 100644[m
[1m--- a/backend/static/js/globals.js[m
[1m+++ b/backend/static/js/globals.js[m
[36m@@ -253,6 +253,7 @@[m [mclass Tournament {[m
 		let currPhaseIndex = phaseNames.indexOf(this.currPhase);[m
 		let lastPhaseIndex = phaseNames.indexOf(this.lastPhase);[m
 [m
[32m+[m		[32mconsole.log(this);[m
 		phaseNames.forEach((phase, i) => {[m
 			if (i < firstPhaseIndex || i > currPhaseIndex)[m
 				return ;[m
[36m@@ -270,7 +271,7 @@[m [mclass Tournament {[m
 	updatePlayerSlots(cssSelector, players, scores) {[m
 		const query = `.${cssSelector}.player`;[m
 		const slots = document.querySelectorAll(query);[m
[31m-		[m
[32m+[m		[32mconsole.log(cssSelector, players, scores);[m
 		players.forEach((player, i) => {[m
 			if (player.disconnected) {[m
 				slots[i].querySelector("span.name").textContent = 'DISCONNECTED';[m
